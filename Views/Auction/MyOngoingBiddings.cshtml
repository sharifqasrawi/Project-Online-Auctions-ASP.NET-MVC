@using PagedList
@using PagedList.Mvc
@model IPagedList<OnlineAuctionProject.Models.Auction>
@using OnlineAuctionProject.Resources
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = Resource.MyOngoingBiddings;
}

<h3>
    <span class="glyphicon glyphicon-time"></span>
    @Resource.MyOngoingBiddings [@ViewBag.AuctionsCount]
</h3>
<hr />

<div class="Box">
    <div class="row">
        <div class="col-lg-4 col-lg-offset-4 col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3">
            @using (Html.BeginForm("MyOngoingBiddings", "Auction", FormMethod.Get))
            {
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-question-sign"></i></span>
                    @Html.TextBox("Search", null, new { @class = "form-control", placeholder = Resource.Search })
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-default">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>
            }
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-lg-12">
            <p class="alert-danger text-center">
                @ViewBag.ErrorBidding
            </p>
            @if (Model.Count == 0)
            {
                <h3 class="text-danger text-center">
                    @Resource.NoRecordsFound
                </h3>
            }
            else
            {
                foreach (var m in Model)
                {
                    <div class="OngoingAuctionBox">
                        <img src="@Url.Content(m.Product.Images[0].Path)" class="img-thumbnail img-responsive AuctionImg" alt="@m.Product.Name (@Resource.Image)" />
                        <h5 class="text-center">
                            @m.Product.Name
                        </h5>
                         <div class="text-center">
                            <div id="countdowntimer">
                                <span id="future_date_@m.Id"></span>
                            </div>
                            <script>
                                //countdown
                                $("#future_date_@m.Id").countdowntimer({
                                    startDate: '@DateTime.Now.ToString(new System.Globalization.CultureInfo("en-US"))',
                                    dateAndTime: '@m.Finish_Date.Value.ToString(new System.Globalization.CultureInfo("en-US"))',
                                    size: "xs",
                                    timeUp: timeIsUp,
                                    regexpMatchFormat: "([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})",
                                    regexpReplaceWith: "$1<sup>@Resource.DayAbbr</sup> / $2<sup>@Resource.HourAbbr</sup> / $3<sup>@Resource.MinuteAbbr</sup> / $4<sup>@Resource.SecondAbbr</sup>",
                                    backgroundColor: 'transparent',
                                    borderColor: "transparent",
                                    fontColor: '#00487e'
                                });
                                function timeIsUp() {
                                    location.reload();
                                }
                            </script>
                        </div>
                        <h5>
                            @Resource.CurrentBid: 
                            <span class="label label-primary"> @m.Current_Bid @m.Product.Currency.Name</span>
                        </h5>

                        <h5>
                            @Resource.CurrentBidder:
                            @(m.Buyer.UserName == User.Identity.Name ? Resource.Me : (m.Buyer.UserName == null ? Resource.None : m.Buyer.UserName))
                        </h5>
                        <h5>
                            <a href="@Url.Action("ViewAuction", "Auction", new { Id = m.Id })"
                               style="color:blue;">
                                @Resource.DetailsAndBidding
                                <span></span>
                            </a>
                        </h5>
                        @using (Html.BeginForm("Bid", "Auction", new { Id = m.Id, Value = m.Current_Bid, returnUrl = "/Auction/MyOngoingBiddings" }, FormMethod.Post))
                        {
                            <div class="form-inline form-group">
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <span style="display:inline; font-weight:bold;">@m.Product.Currency.Name</span>
                                    </span>
                                    @if (m.Buyer != null && m.Buyer.Id == User.Identity.GetUserId())
                                    { 
                                        @Html.TextBox("Current_Bid", m.Current_Bid, new { @class = "form-control", type = "number", min = m.Current_Bid, disabled = "disabled" })
                                        <span class="input-group-btn">
                                            <input type="submit" value="@Resource.Bid" class="btn btn-success" disabled="disabled" />
                                        </span>
                                    }
                                    else
                                    {
                                        @Html.TextBox("Current_Bid", m.Current_Bid, new { @class = "form-control", type = "number", min = m.Current_Bid })
                                        <span class="input-group-btn">
                                            <input type="submit" value="@Resource.Bid" class="btn btn-success" />
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
    @Html.PagedListPager(Model, page => Url.Action("MyOngoingBiddings", "Auction", new { page }),
                        new PagedListRenderOptions()
                        {
                            Display = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded
                        })


</div>
